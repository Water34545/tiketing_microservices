apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-mongo-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tickets-mongo
  strategy: {}
  template:
    metadata:
      labels:
        app: tickets-mongo
    spec:
      containers:
        - name: tickets-mongo
          image: mongo
          args: ["--dbpath","/data/db"]
          volumeMounts:
            - name: "mongo-data-dir"
              mountPath: "/data/db"
      volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
            claimName: "tickets-mongo-data"
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-mongo-srv
spec:
  selector:
    app: tickets-mongo
  ports:
    - name: db
      protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tickets-mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  name: tickets-gcs-repo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: backup/mongodb/tickets-mongo
    storageSecretName: tickets-gcs-secret
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  name: tickets-mongo-backup
spec:
  schedule: "*/5 * * * *"
  repository:
    name: tickets-gcs-repo
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: tickets-mongo
  retentionPolicy:
    name: keep-last-5
    keepLast: 5
    prune: true
